/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { ShoppingMall, ShoppingMallInterface } from "../ShoppingMall";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract TenantSpaceNFTFactory",
        name: "_tenantSpaceNFTFactory",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "name_",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol_",
        type: "string",
      },
    ],
    name: "createTenantSpaceNFT",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "rentTenantSpace",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "tenantSpaceNFTFactory",
    outputs: [
      {
        internalType: "contract TenantSpaceNFTFactory",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60a060405234801561001057600080fd5b5060405161061f38038061061f83398181016040528101906100329190610084565b8073ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1660601b8152505050610111565b60008151905061007e816100fa565b92915050565b60006020828403121561009a576100996100f5565b5b60006100a88482850161006f565b91505092915050565b60006100bc826100d5565b9050919050565b60006100ce826100b1565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600080fd5b610103816100c3565b811461010e57600080fd5b50565b60805160601c6104eb6101346000396000818160b4015260da01526104eb6000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c806334f47cc6146100465780638e57a8fd14610064578063f723e2e414610094575b600080fd5b61004e6100b2565b60405161005b91906102af565b60405180910390f35b61007e600480360381019061007991906101e0565b6100d6565b60405161008b9190610301565b60405180910390f35b61009c61016b565b6040516100a99190610301565b60405180910390f35b7f000000000000000000000000000000000000000000000000000000000000000081565b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16638e57a8fd84846040518363ffffffff1660e01b81526004016101339291906102ca565b600060405180830381600087803b15801561014d57600080fd5b505af1158015610161573d6000803e3d6000fd5b5050505092915050565b600090565b600061018361017e84610341565b61031c565b90508281526020810184848401111561019f5761019e610495565b5b6101aa8482856103ee565b509392505050565b600082601f8301126101c7576101c6610490565b5b81356101d7848260208601610170565b91505092915050565b600080604083850312156101f7576101f661049f565b5b600083013567ffffffffffffffff8111156102155761021461049a565b5b610221858286016101b2565b925050602083013567ffffffffffffffff8111156102425761024161049a565b5b61024e858286016101b2565b9150509250929050565b610261816103b8565b82525050565b600061027282610372565b61027c818561037d565b935061028c8185602086016103fd565b610295816104a4565b840191505092915050565b6102a9816103ae565b82525050565b60006020820190506102c46000830184610258565b92915050565b600060408201905081810360008301526102e48185610267565b905081810360208301526102f88184610267565b90509392505050565b600060208201905061031660008301846102a0565b92915050565b6000610326610337565b90506103328282610430565b919050565b6000604051905090565b600067ffffffffffffffff82111561035c5761035b610461565b5b610365826104a4565b9050602081019050919050565b600081519050919050565b600082825260208201905092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006103c3826103ca565b9050919050565b60006103d5826103dc565b9050919050565b60006103e78261038e565b9050919050565b82818337600083830152505050565b60005b8381101561041b578082015181840152602081019050610400565b8381111561042a576000848401525b50505050565b610439826104a4565b810181811067ffffffffffffffff8211171561045857610457610461565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f830116905091905056fea2646970667358221220ed69b197e38e3d3606a190a22962d2d9c583ba7a1871d11d6c111bc43f3634b464736f6c63430008070033";

type ShoppingMallConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ShoppingMallConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ShoppingMall__factory extends ContractFactory {
  constructor(...args: ShoppingMallConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "ShoppingMall";
  }

  deploy(
    _tenantSpaceNFTFactory: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ShoppingMall> {
    return super.deploy(
      _tenantSpaceNFTFactory,
      overrides || {}
    ) as Promise<ShoppingMall>;
  }
  getDeployTransaction(
    _tenantSpaceNFTFactory: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_tenantSpaceNFTFactory, overrides || {});
  }
  attach(address: string): ShoppingMall {
    return super.attach(address) as ShoppingMall;
  }
  connect(signer: Signer): ShoppingMall__factory {
    return super.connect(signer) as ShoppingMall__factory;
  }
  static readonly contractName: "ShoppingMall";
  public readonly contractName: "ShoppingMall";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ShoppingMallInterface {
    return new utils.Interface(_abi) as ShoppingMallInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ShoppingMall {
    return new Contract(address, _abi, signerOrProvider) as ShoppingMall;
  }
}
